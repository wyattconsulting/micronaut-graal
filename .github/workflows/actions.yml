name: Build & Deploy Lambda

on: [push]

permissions:
  contents: write

jobs:
  Build:
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - uses: graalvm/setup-graalvm@v1
      with:
          java-version: '17'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup
      run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate-and-submit

    - name: Test with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: :app:test --scan
      
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: :app:buildNativeLambda --scan

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Lambda
        path: app/build/libs

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: Lambda
          path: app/build/libs
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: CDK Depoy with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :infra:run --scan
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: 'us-east-2'
